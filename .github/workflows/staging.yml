# name: Staging Deployment

# on: 
#   push:
#     branches:
#       - feature
    
# jobs:
#   deploy_to_staging:
#     strategy:
#       matrix:
#         go-version: [1.19.x]
#     name: Deploy staging server to Google Cloud Run
#     runs-on: ubuntu-latest
#     environment:
#       name: staging

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - id: 'auth'
#         uses: 'google-github-actions/auth@v0'
#         with:
#           credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
#           project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}

#       # Configure Docker to use the gcloud command-line tool as a credential
#       # helper for authentication
#       - run: |-
#          gcloud --quiet auth configure-docker
     
#       - name: Build Docker Image
#         run: |-
#          docker build -t eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA . 

#       - name: Push Docker Image to GCR
#         run: |-
#          docker push eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA

#       - name: Deploy to Google Cloud Run
#         uses: 'google-github-actions/deploy-cloudrun@v0'
#         with:
#           service: ${{ secrets.SERVICE_NAME }}
#           region: 'europe-west2'
#           image: 'eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/${{ secrets.GCR_NAME }}:${{  github.sha }}'
#           env_vars: |
#             ROOT_COLLECTION_SUFFIX=${{ secrets.ROOT_COLLECTION_SUFFIX }}
#             DEBUG=${{ secrets.DEBUG }}
#             REPOSITORY=${{ secrets.REPOSITORY }}
#             AIT_API_KEY=${{ secrets.AIT_API_KEY }}
#             AIT_USERNAME=${{ secrets.AIT_USERNAME }}
#             AIT_SENDER_ID=${{ secrets.AIT_SENDER_ID }}
#             AIT_ENVIRONMENT=${{ secrets.AIT_ENVIRONMENT }}
#             GOOGLE_PROJECT_NUMBER=${{ secrets.GOOGLE_PROJECT_NUMBER }}
#             GOOGLE_CLOUD_PROJECT_ID=${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
#             FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }}
#             ORYX_PROVIDER_CHANNEL=${{ secrets.ORYX_PROVIDER_CHANNEL }}